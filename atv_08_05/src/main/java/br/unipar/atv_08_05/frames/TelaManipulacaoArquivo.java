/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.unipar.atv_08_05.frames;

import br.unipar.atv_08_05.frames.DAO.PessoaDAO;
import br.unipar.atv_08_05.models.Pessoa;
import br.unipar.atv_08_05.util.EntityManagerUtil;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author victo
 */
public class TelaManipulacaoArquivo extends javax.swing.JFrame {

    /**
     * Creates new form TelaManipulacaoArquivo
     */
    public TelaManipulacaoArquivo() {
        initComponents();
        EntityManagerUtil.getEntityManagerFactory();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btBuscarArquvio = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaArquivo = new javax.swing.JTextArea();
        textArquivo = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btBuscarArquvio.setText("Buscar");
        btBuscarArquvio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscarArquvioActionPerformed(evt);
            }
        });

        jLabel1.setText("Arquivo:");

        textAreaArquivo.setColumns(20);
        textAreaArquivo.setRows(5);
        jScrollPane1.setViewportView(textAreaArquivo);

        textArquivo.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textArquivo))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 316, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btBuscarArquvio))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(textArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btBuscarArquvio))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(64, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btBuscarArquvioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscarArquvioActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fileChooser.setAcceptAllFileFilterUsed(false);
        fileChooser.setFileFilter(new FileNameExtensionFilter("CSV Files", "csv"));
               
        int returnValue = fileChooser.showOpenDialog(this);
        
        if(returnValue == JFileChooser.APPROVE_OPTION){
            File arquivo = fileChooser.getSelectedFile();
            
            textArquivo.setText(arquivo.getAbsolutePath());
            
            converterPessoa(arquivo);
        }
        else{
            textArquivo.setText("");
            textAreaArquivo.setText("");
        }
    }//GEN-LAST:event_btBuscarArquvioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaManipulacaoArquivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaManipulacaoArquivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaManipulacaoArquivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaManipulacaoArquivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaManipulacaoArquivo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btBuscarArquvio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea textAreaArquivo;
    private javax.swing.JTextField textArquivo;
    // End of variables declaration//GEN-END:variables

    private void converterPessoa(File arquivo){
        try (BufferedReader bf = new BufferedReader(new InputStreamReader
        (new FileInputStream(arquivo.getAbsolutePath()), "UTF-8"))){
                String linha;
                int id = 0;
                List<Pessoa> pessoaList = new ArrayList<>();
                
                bf.readLine();
                while((linha = bf.readLine()) != null){
                    String[] campos = linha.split(",");
                    Pessoa pessoa = new Pessoa();
                    
                    pessoa.setId(++id);
                    pessoa.setNome(campos[0]);
                    pessoa.setIdade(Integer.parseInt(campos[1]));
                    pessoa.setCpf(campos[2]);
                    pessoa.setRg(campos[3]);

                    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
                    LocalDate date = LocalDate.parse(campos[4], formatter);
                    pessoa.setDtNasc(Date.from(date.atStartOfDay(ZoneId.systemDefault()).toInstant()));
                    pessoa.setSexo(campos[5]);
                    pessoa.setSigno(campos[6]);
                    pessoa.setNmMae(campos[7]);
                    pessoa.setNmPai(campos[8]);
                    pessoa.setDsEmail(campos[9]);
                    pessoa.setSenha(campos[10]);
                    pessoa.setCep(campos[11]);
                    pessoa.setEndereco(campos[12]);
                    pessoa.setNrCasa(campos[13]);
                    pessoa.setBairro(campos[14]);
                    pessoa.setCidade(campos[15]);
                    pessoa.setEstado(campos[16]);
                    pessoa.setTelefone(campos[17]);
                    pessoa.setCelular(campos[18]);
                    pessoa.setAltura(Double.valueOf(campos[19]));
                    pessoa.setPeso(Double.valueOf(campos[20]));
                    pessoa.setTpSanguineo(campos[21]);
                    pessoa.setCor(campos[22]);
                    
                    pessoaList.add(pessoa);
                    
                    PessoaDAO dao = new PessoaDAO(EntityManagerUtil.getManager());
                    dao.insert(pessoa);
                }
                    for(Pessoa pessoa: pessoaList){
                    textAreaArquivo.setText(pessoa.toString());
                }
                    PessoaDAO dao = new PessoaDAO(EntityManagerUtil.getManager());
            }catch (IOException ex) {
                System.out.println("Algo deu errado - " + ex.getMessage());
            }
    }

    
}
